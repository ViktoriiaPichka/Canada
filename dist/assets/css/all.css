@charset "UTF-8";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, font, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

body {
  line-height: 1.28571; }

a {
  text-decoration: none; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

/* remember to define focus styles! */
:focus {
  outline: 0; }

/* remember to highlight inserts somehow! */
ins {
  text-decoration: none; }

del {
  text-decoration: line-through; }

/* tables still need 'cellspacing="0"' in the markup */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html {
  box-sizing: border-box;
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent; }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 18px;
  color: #343434;
  background: #fff;
  font-weight: 400; }

a {
  text-decoration: none; }
  a:hover {
    text-decoration: none; }

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 400;
  color: #343434; }

h1, .h1 {
  font-size: 81px; }

h2, .h2 {
  font-size: 36px; }

h3, .h3 {
  font-size: 20px; }

h4, .h4 {
  font-size: 30px; }

h5, .h5 {
  font-size: 29px; }

h6, .h6 {
  font-size: 26px; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

.text-justify {
  text-align: justify; }

.text-nowrap {
  white-space: nowrap; }

.center-block {
  display: block;
  margin: 0 auto; }

.text-uppercase {
  text-transform: uppercase; }

.text-capitalize {
  text-transform: capitalize; }

/*!
 *  Font Awesome 4.6.1 by @davegandy - http://fontawesome.io - @fontawesome
 *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)
 */
/* FONT PATH
 * -------------------------- */
@font-face {
  font-family: 'FontAwesome';
  src: url("../fonts/fontawesome-webfont.eot?v=4.6.1");
  src: url("../fonts/fontawesome-webfont.eot?#iefix&v=4.6.1") format("embedded-opentype"), url("../fonts/fontawesome-webfont.woff2?v=4.6.1") format("woff2"), url("../fonts/fontawesome-webfont.woff?v=4.6.1") format("woff"), url("../fonts/fontawesome-webfont.ttf?v=4.6.1") format("truetype"), url("../fonts/fontawesome-webfont.svg?v=4.6.1#fontawesomeregular") format("svg");
  font-weight: normal;
  font-style: normal; }

.fa {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  display: inline-block;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */
.fa-facebook:before {
  content: ""; }

.fa-twitter:before {
  content: ""; }

.fa-angle-left:before {
  content: ""; }

.fa-angle-right:before {
  content: ""; }

.fa-rocket:before {
  content: ""; }

.fa-lightbulb-o:before {
  content: ""; }

.fa-tablet:before {
  content: ""; }

.fa-desktop:before {
  content: ""; }

.fa-vk:before {
  content: ""; }

.fa-phone:before {
  content: ""; }

.menu-nav .menu {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-top: 6%; }
  @media screen and (max-width: 1024px) {
    .menu-nav .menu {
      margin-top: 4px; } }
  .menu-nav .menu li {
    display: inline-block;
    margin-right: 2%; }
    .menu-nav .menu li:hover a, .menu-nav .menu li.active a {
      color: #e21b28; }
    .menu-nav .menu li a {
      padding: 10px 4px;
      display: inline-block;
      color: #343434;
      font: 400 14px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
      text-transform: uppercase;
      word-spacing: 0.8px;
      letter-spacing: 0.2px; }
      @media screen and (max-width: 1024px) {
        .menu-nav .menu li a {
          font-size: 11px; } }
      @media screen and (max-width: 850px) {
        .menu-nav .menu li a {
          font-size: 10px; } }
      .menu-nav .menu li a:hover {
        text-decoration: none;
        color: #e21b28; }
  .menu-nav .menu li.hidden {
    display: none; }
  @media screen and (max-width: 768px) {
    .menu-nav .menu {
      display: none;
      text-align: center; }
      .menu-nav .menu li.hidden {
        display: block; }
      .menu-nav .menu li {
        display: block; }
        .menu-nav .menu li a {
          display: block;
          font-size: 20px; } }
  @media screen and (max-width: 480px) {
    .menu-nav .menu li > a {
      font-size: 13px;
      padding: 8px 0px; } }

.burger-btn {
  display: block;
  position: absolute;
  overflow: hidden;
  width: 58px;
  height: 44px;
  background: #e21b28;
  box-shadow: none;
  cursor: pointer;
  top: 8%;
  left: 89%;
  border: none; }
  @media screen and (max-width: 768px) {
    .burger-btn {
      left: 90%;
      top: 10px; } }
  @media screen and (max-width: 680px) {
    .burger-btn {
      left: 87%; } }
  @media screen and (max-width: 520px) {
    .burger-btn {
      left: 85%;
      top: 6px; } }
  @media screen and (max-width: 480px) {
    .burger-btn {
      left: 89%;
      top: 15px;
      width: 27px;
      height: 22px;
      border-radius: 2px; } }
  @media screen and (max-width: 420px) {
    .burger-btn {
      top: 9px; } }
  .burger-btn:focus {
    outline: none; }
  .burger-btn span {
    width: 38px;
    height: 6px;
    background: #fff;
    position: absolute;
    top: 19px;
    left: 10px;
    transition: background .3s linear; }
    @media screen and (max-width: 480px) {
      .burger-btn span {
        width: 17px;
        height: 3px;
        top: 8.5px;
        left: 5px; } }
    .burger-btn span:after, .burger-btn span:before {
      content: '';
      width: 100%;
      height: 6px;
      background: #fff;
      position: absolute;
      transform: translateY(-10px);
      left: 0;
      transition: transform .3s linear; }
      @media screen and (max-width: 480px) {
        .burger-btn span:after, .burger-btn span:before {
          height: 3px;
          transform: translateY(-5px); } }
    .burger-btn span:before {
      transform: translateY(10px); }
      @media screen and (max-width: 480px) {
        .burger-btn span:before {
          transform: translateY(5px); } }

.burger-btn.opened span {
  background: transparent; }

.burger-btn.opened span:after {
  transform: translateY(0px) rotate(45deg); }

.burger-btn.opened span:before {
  transform: translateY(0px) rotate(-45deg); }

@media screen and (min-width: 769px) {
  .burger-btn {
    display: none; } }

.menu-footer .menu {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: start;
  justify-content: flex-start; }
  @media screen and (max-width: 480px) {
    .menu-footer .menu {
      -ms-flex-pack: distribute;
      justify-content: space-around; } }
  .menu-footer .menu li {
    margin-right: 2%;
    display: inline-block; }
    .menu-footer .menu li:hover a, .menu-footer .menu li.active a {
      color: #d1d1d1; }
    .menu-footer .menu li a {
      padding: 10px 4px;
      display: inline-block;
      color: #fff;
      font: 400 14px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
      letter-spacing: -0.1px;
      text-transform: uppercase; }
      .menu-footer .menu li a:hover {
        text-decoration: none; }
  @media screen and (max-width: 1115px) {
    .menu-footer .menu li {
      margin-right: 1%; }
      .menu-footer .menu li a {
        font-size: 12px; } }
  @media screen and (max-width: 850px) {
    .menu-footer .menu li a {
      font-size: 10px; } }
  @media screen and (max-width: 768px) {
    .menu-footer .menu li {
      width: 26%; }
      .menu-footer .menu li a {
        font-size: 12px; } }
  @media screen and (max-width: 480px) {
    .menu-footer .menu li {
      width: 45%; }
      .menu-footer .menu li a {
        font-size: 13px;
        padding: 8px 0px; } }

.menu-info {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: end;
  justify-content: flex-end; }
  @media screen and (max-width: 768px) {
    .menu-info {
      -ms-flex-pack: distribute;
      justify-content: space-around; } }
  .menu-info li {
    display: inline-block; }
    .menu-info li:hover a, .menu-info li.active a {
      color: #fff;
      text-decoration: none; }
    .menu-info li a {
      padding: 5px 6px 6px 4px;
      display: inline-block;
      color: #d1d1d1;
      text-transform: uppercase;
      border-radius: 10px;
      background: #1b1b1b; }
  @media screen and (max-width: 800px) {
    .menu-info a {
      font-size: 17px; } }
  @media screen and (max-width: 768px) {
    .menu-info li {
      width: 30%; }
      .menu-info li a {
        font-size: 20px; } }
  @media screen and (max-width: 480px) {
    .menu-info li {
      width: 45%; } }
  .menu-info .fc {
    padding: 5px 5px 3px 6px; }
    .menu-info .fc a {
      padding: 7px 12px 4px 8px; }
  .menu-info .vk {
    padding: 6px 5px 11px 5px; }

@font-face {
  font-family: 'open_sansbold';
  src: url("../fonts/open-sans.bold-webfont.woff2") format("woff2"), url("../fonts/open-sans.bold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'open_sanslight';
  src: url("../fonts/open-sans.light-webfont.woff2") format("woff2"), url("../fonts/open-sans.light-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'open_sansregular';
  src: url("../fonts/open-sans.regular-webfont.woff2") format("woff2"), url("../fonts/open-sans.regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

.btn {
  padding: 10px 15px;
  font-size: 15px;
  border-radius: 6px;
  font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 400;
  text-transform: uppercase;
  text-align: center;
  display: inline-block;
  margin: 10px;
  cursor: pointer;
  position: relative;
  border: 0;
  z-index: 2; }
  .btn:hover, .btn:focus {
    text-decoration: none; }
  @media screen and (max-width: 960px) {
    .btn {
      font-size: 12px;
      padding: 8px 12px; } }
  @media screen and (max-width: 768px) {
    .btn {
      font-size: 10px;
      padding: 6px 10px; } }
  @media screen and (max-width: 480px) {
    .btn {
      padding: 10px 15px;
      font-size: 15px;
      border-radius: 6px; } }
  .btn-brand {
    color: #fff;
    background: #e21b28; }
    .btn-brand:hover, .btn-brand:focus {
      color: #f2f2f2;
      background: #b41620; }
    .btn-brand:active {
      color: #cccccc;
      background: #9e131c; }
      .btn-brand:active:hover, .btn-brand:active:focus {
        color: #e6e6e6;
        background: #cb1824; }
    .btn-brand:disabled {
      color: #d9d9d9;
      background: #ee757d; }
  .btn-lg {
    padding: 12px 47px;
    font-size: 19px;
    border-radius: 6px;
    font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; }
    @media screen and (max-width: 1200px) {
      .btn-lg {
        font-size: 16px; } }
    @media screen and (max-width: 980px) {
      .btn-lg {
        font-size: 14px;
        padding: 11px 20px; } }

.swiper-articles {
  overflow: hidden;
  position: relative; }
  .swiper-articles .swiper-button-next,
  .swiper-articles .swiper-button-prev {
    width: 65px;
    height: 66px;
    border-radius: 7px;
    background: rgba(147, 147, 147, 0.6);
    top: 36%;
    font-size: 50px;
    transform: translateY(-53%); }
    @media screen and (max-width: 768px) {
      .swiper-articles .swiper-button-next,
      .swiper-articles .swiper-button-prev {
        width: 52px;
        height: 50px;
        border-radius: 5px; } }
    @media screen and (max-width: 480px) {
      .swiper-articles .swiper-button-next,
      .swiper-articles .swiper-button-prev {
        width: 33px;
        height: 33px; } }
  .swiper-articles .swiper-button-next {
    right: 10px; }
    .swiper-articles .swiper-button-next img {
      margin: 16px 2px 26px 20px; }
      @media screen and (max-width: 768px) {
        .swiper-articles .swiper-button-next img {
          margin: 6px 2px 26px 14px; } }
      @media screen and (max-width: 480px) {
        .swiper-articles .swiper-button-next img {
          margin: 4px 2px 46px 5px; } }
  .swiper-articles .swiper-button-prev {
    left: 22px; }
    .swiper-articles .swiper-button-prev img {
      margin: 16px 2px 26px 19px; }
      @media screen and (max-width: 768px) {
        .swiper-articles .swiper-button-prev img {
          margin: 5px 2px 27px 15px; } }
      @media screen and (max-width: 768px) {
        .swiper-articles .swiper-button-prev img {
          left: 9px; } }
      @media screen and (max-width: 480px) {
        .swiper-articles .swiper-button-prev img {
          margin: 5px 7px 46px 4px; } }

.swiper-news {
  overflow: hidden;
  position: relative; }
  .swiper-news .swiper-news-next,
  .swiper-news .swiper-news-prev {
    position: absolute;
    width: 65px;
    height: 66px;
    border-radius: 7px;
    background: rgba(147, 147, 147, 0.6);
    top: 36%;
    font-size: 50px;
    transform: translateY(-53%);
    z-index: 10;
    cursor: pointer; }
    @media screen and (max-width: 768px) {
      .swiper-news .swiper-news-next,
      .swiper-news .swiper-news-prev {
        width: 52px;
        height: 50px;
        border-radius: 5px; } }
    @media screen and (max-width: 480px) {
      .swiper-news .swiper-news-next,
      .swiper-news .swiper-news-prev {
        width: 33px;
        height: 33px; } }
  .swiper-news .swiper-news-next {
    right: 10px;
    left: auto; }
    .swiper-news .swiper-news-next img {
      margin: 16px 2px 26px 20px; }
      @media screen and (max-width: 768px) {
        .swiper-news .swiper-news-next img {
          margin: 6px 2px 26px 14px; } }
      @media screen and (max-width: 480px) {
        .swiper-news .swiper-news-next img {
          margin: 0px 0px 39px 5px; } }
  .swiper-news .swiper-news-prev {
    left: 22px; }
    .swiper-news .swiper-news-prev img {
      margin: 16px 2px 26px 19px; }
      @media screen and (max-width: 768px) {
        .swiper-news .swiper-news-prev img {
          margin: 5px 2px 27px 15px; } }
      @media screen and (max-width: 1300px) {
        .swiper-news .swiper-news-prev img {
          left: 1%; } }
      @media screen and (max-width: 640px) {
        .swiper-news .swiper-news-prev img {
          left: 1.8%; } }
      @media screen and (max-width: 480px) {
        .swiper-news .swiper-news-prev img {
          margin: 0px 2px 39px 5px; } }

.swiper-jumbotron {
  overflow: hidden;
  position: relative; }
  .swiper-jumbotron:after {
    content: "";
    position: absolute;
    width: 40%;
    height: 100%;
    left: 3%;
    top: 46%;
    background: url(../images/emblem.png) no-repeat;
    background-size: 80% 77%;
    z-index: 20; }
  .swiper-jumbotron .swiper-container {
    width: 500px;
    height: 300px;
    margin: 20px auto; }
  .swiper-jumbotron .swiper-slide {
    text-align: center;
    font-size: 18px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
    justify-content: center;
    -ms-flex-align: center;
    align-items: center; }
    .swiper-jumbotron .swiper-slide .slider-img img {
      width: 100%; }
      @media screen and (max-width: 1100px) {
        .swiper-jumbotron .swiper-slide .slider-img img {
          width: 80%; } }
      @media screen and (max-width: 520px) {
        .swiper-jumbotron .swiper-slide .slider-img img {
          width: 90%; } }
    .swiper-jumbotron .swiper-slide .jumbotron {
      position: absolute;
      width: 100%;
      top: 50%; }
      .swiper-jumbotron .swiper-slide .jumbotron .h1 {
        color: #fff;
        font: 700 42px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        text-transform: uppercase;
        color: #fff;
        font: 700 42px "open_sansregular", Helvetica, Arial, sans-serif;
        text-transform: uppercase;
        line-height: 1.4;
        letter-spacing: 0.6px; }
        @media screen and (max-width: 980px) {
          .swiper-jumbotron .swiper-slide .jumbotron .h1 {
            font-size: 32px; } }
        @media screen and (max-width: 768px) {
          .swiper-jumbotron .swiper-slide .jumbotron .h1 {
            font-size: 24px; } }
        @media screen and (max-width: 600px) {
          .swiper-jumbotron .swiper-slide .jumbotron .h1 {
            font-size: 16px;
            line-height: 1.9; } }
        @media screen and (max-width: 400px) {
          .swiper-jumbotron .swiper-slide .jumbotron .h1 {
            font-size: 13px; } }
      .swiper-jumbotron .swiper-slide .jumbotron .h3 {
        color: #fff;
        font: 24px "open_sansregular", Helvetica, Arial, sans-serif;
        letter-spacing: 1.3px; }
        @media screen and (max-width: 980px) {
          .swiper-jumbotron .swiper-slide .jumbotron .h3 {
            font-size: 16px; } }
        @media screen and (max-width: 768px) {
          .swiper-jumbotron .swiper-slide .jumbotron .h3 {
            font-size: 11px; } }
        @media screen and (max-width: 400px) {
          .swiper-jumbotron .swiper-slide .jumbotron .h3 {
            font-size: 7px; } }
  .swiper-jumbotron .swiper-jumbotron-next,
  .swiper-jumbotron .swiper-jumbotron-prev {
    position: absolute;
    width: 52px;
    height: 50px;
    top: 59%;
    font-size: 50px;
    z-index: 30;
    cursor: pointer;
    transform: translateY(-53%); }
    @media screen and (max-width: 680px) {
      .swiper-jumbotron .swiper-jumbotron-next,
      .swiper-jumbotron .swiper-jumbotron-prev {
        top: 45%; } }
    .swiper-jumbotron .swiper-jumbotron-next img,
    .swiper-jumbotron .swiper-jumbotron-prev img {
      margin: 6px 2px 26px 12px; }
      @media screen and (max-width: 680px) {
        .swiper-jumbotron .swiper-jumbotron-next img,
        .swiper-jumbotron .swiper-jumbotron-prev img {
          width: 34%; } }
      @media screen and (max-width: 520px) {
        .swiper-jumbotron .swiper-jumbotron-next img,
        .swiper-jumbotron .swiper-jumbotron-prev img {
          width: 27%; } }
  .swiper-jumbotron .swiper-jumbotron-next {
    right: -1%;
    left: auto; }
    @media screen and (max-width: 520px) {
      .swiper-jumbotron .swiper-jumbotron-next {
        right: -4%; } }
    @media screen and (max-width: 520px) {
      .swiper-jumbotron .swiper-jumbotron-next {
        right: -5%; } }
  .swiper-jumbotron .swiper-jumbotron-prev {
    left: 1%; }
    @media screen and (max-width: 520px) {
      .swiper-jumbotron .swiper-jumbotron-prev {
        left: -1%; } }
  .swiper-jumbotron .slider-btn {
    position: absolute;
    width: 63%;
    bottom: 10%;
    left: 42.4%;
    z-index: 21;
    display: -ms-flexbox;
    display: flex;
    transform: translateX(-26%); }
    @media screen and (max-width: 570px) {
      .swiper-jumbotron .slider-btn {
        left: 38.4%; } }
    @media screen and (max-width: 480px) {
      .swiper-jumbotron .slider-btn {
        left: 44.4%; } }
    @media screen and (max-width: 420px) {
      .swiper-jumbotron .slider-btn {
        left: 38.4%; } }
    .swiper-jumbotron .slider-btn .btn {
      margin: 0% 3% 1% 1.3%;
      border-radius: 9px;
      font: 18px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; }
      @media screen and (max-width: 1000px) {
        .swiper-jumbotron .slider-btn .btn {
          font-size: 14px; } }
      @media screen and (max-width: 980px) {
        .swiper-jumbotron .slider-btn .btn {
          font-size: 12px; } }
      @media screen and (max-width: 768px) {
        .swiper-jumbotron .slider-btn .btn {
          font-size: 10px;
          margin: 0% 1% 1% 1.3%; } }
      @media screen and (max-width: 480px) {
        .swiper-jumbotron .slider-btn .btn {
          font-size: 7px; } }
      .swiper-jumbotron .slider-btn .btn-left {
        padding: 1% 4% 1.4% 3%; }
        @media screen and (max-width: 660px) {
          .swiper-jumbotron .slider-btn .btn-left {
            padding: 1% 2% 1.4% 2%; } }
      .swiper-jumbotron .slider-btn .btn-right {
        padding: 1.5% 3% 1.9% 3%;
        text-transform: initial;
        font-weight: 300;
        letter-spacing: 0.6px;
        color: #e21b28;
        background: #fff; }
        .swiper-jumbotron .slider-btn .btn-right:hover {
          background: #f1f1f1; }
        @media screen and (max-width: 660px) {
          .swiper-jumbotron .slider-btn .btn-right {
            padding: 1% 2% 1.4% 2%; } }

.tumbnail {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  align-items: center; }
  .tumbnail-question {
    width: 15%;
    margin-right: 4%; }
    @media screen and (max-width: 1024px) {
      .tumbnail-question {
        margin-right: 2%; } }
    @media screen and (max-width: 768px) {
      .tumbnail-question {
        width: 30%; } }
    @media screen and (max-width: 680px) {
      .tumbnail-question {
        width: 50%; } }
    @media screen and (max-width: 480px) {
      .tumbnail-question {
        width: 100%; } }
    .tumbnail-question-100 .tumbnail-top.tumbnail-top-border {
      margin-left: 9%; }
      .tumbnail-question-100 .tumbnail-top.tumbnail-top-border .img-holder {
        padding: 28% 2% 10% 3%; }
    .tumbnail-question-libra .tumbnail-top.tumbnail-top-border {
      margin-left: 3%; }
      .tumbnail-question-libra .tumbnail-top.tumbnail-top-border .img-holder {
        padding: 24% 2% 14% 4%; }
    .tumbnail-question-castle .tumbnail-top.tumbnail-top-border {
      margin-left: 1%; }
      .tumbnail-question-castle .tumbnail-top.tumbnail-top-border .img-holder {
        padding: 27% 2% 10% 0%; }
    .tumbnail-question-dollar .tumbnail-top.tumbnail-top-border {
      margin-left: 2%; }
    .tumbnail-question-dollar .img-holder {
      padding: 26% 5% 13% 1%; }
    .tumbnail-question-medal .tumbnail-top.tumbnail-top-border {
      margin-left: 0; }
      .tumbnail-question-medal .tumbnail-top.tumbnail-top-border .img-holder {
        padding: 26% 7% 13% 1%; }
  .tumbnail-services {
    width: 14.5%;
    margin: 0.5% 1.9% 10% 0%;
    z-index: 5; }
    @media screen and (max-width: 980px) {
      .tumbnail-services {
        width: 14.5%; } }
    @media screen and (max-width: 728px) {
      .tumbnail-services {
        width: 100%;
        margin: 0.5% 0.1% 6% 0.1%; } }
    @media screen and (max-width: 600px) {
      .tumbnail-services {
        margin: 0.5% 0.1% 10% 0.1%; } }
    @media screen and (max-width: 370px) {
      .tumbnail-services {
        margin: 0.5% 0.1% 13% 0.1%; } }
  .tumbnail-articles {
    background: #fff;
    border-radius: 10px;
    width: 107%; }
    @media screen and (max-width: 768px) {
      .tumbnail-articles {
        width: 100%; } }
    @media screen and (max-width: 480px) {
      .tumbnail-articles {
        width: 93%;
        margin: 0 auto; } }
    .tumbnail-articles:hover .tumbnail-bottom-question p {
      color: #e21b28; }
  .tumbnail-news {
    background: #f1f1f1;
    border-radius: 10px;
    width: 100%; }
    @media screen and (max-width: 768px) {
      .tumbnail-news {
        width: 100%; } }
    @media screen and (max-width: 480px) {
      .tumbnail-news {
        width: 65%;
        margin: 0 auto; } }
  .tumbnail .tumbnail-top-border {
    width: 44%; }
    .tumbnail .tumbnail-top-border .img-holder {
      display: inline-block; }
    @media screen and (max-width: 768px) {
      .tumbnail .tumbnail-top-border {
        margin-left: 3% !important; }
        .tumbnail .tumbnail-top-border .img-holder {
          padding: 24% 2% 14% 4% !important; } }
  .tumbnail .tumbnail-top-circle {
    border-radius: 50%;
    background: #fff;
    box-shadow: 0 45px 5px rgba(27, 27, 27, 0.2);
    display: -ms-flexbox;
    display: flex;
    -ms-flex-line-pack: center;
    align-content: center;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: center;
    justify-content: center;
    width: 99%;
    min-height: 137%; }
    @media screen and (max-width: 728px) {
      .tumbnail .tumbnail-top-circle {
        width: 100%;
        background: #fff url(../images/logo.png) no-repeat 5% 38%;
        background-size: 7% 91%;
        border-radius: 0%;
        -ms-flex-pack: end;
        justify-content: flex-end;
        text-align: right;
        box-shadow: none; } }
    @media screen and (max-width: 600px) {
      .tumbnail .tumbnail-top-circle {
        background-size: 7% 65%; } }
    @media screen and (max-width: 370px) {
      .tumbnail .tumbnail-top-circle {
        background: #fff url(../images/logo.png) no-repeat 3% 51%;
        background-size: 10% 56%; } }
    .tumbnail .tumbnail-top-circle p {
      font: 18px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
      color: #111;
      padding: 0% 6% 1% 10%; }
      @media screen and (max-width: 1200px) {
        .tumbnail .tumbnail-top-circle p {
          font-size: 15px; } }
      @media screen and (max-width: 1010px) {
        .tumbnail .tumbnail-top-circle p {
          font-size: 13px; } }
      @media screen and (max-width: 890px) {
        .tumbnail .tumbnail-top-circle p {
          font-size: 11px; } }
      @media screen and (max-width: 760px) {
        .tumbnail .tumbnail-top-circle p {
          font-size: 10px; } }
      @media screen and (max-width: 728px) {
        .tumbnail .tumbnail-top-circle p {
          font-size: 15px; } }
      @media screen and (max-width: 460px) {
        .tumbnail .tumbnail-top-circle p {
          font-size: 12px; } }
      @media screen and (max-width: 395px) {
        .tumbnail .tumbnail-top-circle p {
          padding: 0% 2% 1% 13%;
          font-size: 10px; } }
  .tumbnail .tumbnail-top-img .img-holder {
    padding: 13px 9px;
    display: inline-block; }
  .tumbnail .tumbnail-top-news .img-holder {
    padding: 12px 11px; }
  .tumbnail .tumbnail-bottom-caption p {
    font: 18px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    color: #000;
    line-height: 1.4; }
    @media screen and (max-width: 980px) {
      .tumbnail .tumbnail-bottom-caption p {
        font-size: 15px; } }
    @media screen and (max-width: 840px) {
      .tumbnail .tumbnail-bottom-caption p {
        font-size: 13px; } }
    @media screen and (max-width: 768px) {
      .tumbnail .tumbnail-bottom-caption p {
        font-size: 16px; } }
  .tumbnail .tumbnail-bottom-link a {
    font: 700 14px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    color: #d4d4d4;
    text-decoration: underline;
    text-transform: uppercase;
    cursor: pointer; }
    .tumbnail .tumbnail-bottom-link a:hover {
      color: #fff; }
  .tumbnail .tumbnail-bottom-question p {
    font: 700 16px "open_sansbold", Helvetica, Arial, sans-serif;
    color: #1b1b1b;
    text-transform: uppercase;
    padding: 0 5% 14% 5%;
    cursor: pointer; }
    @media screen and (max-width: 980px) {
      .tumbnail .tumbnail-bottom-question p {
        font-size: 12px; } }
    @media screen and (max-width: 768px) {
      .tumbnail .tumbnail-bottom-question p {
        font-size: 14px; } }
  .tumbnail .tumbnail-bottom-question .pp {
    padding-bottom: 5%; }
  .tumbnail .tumbnail-bottom-news p {
    font: 700 16px "open_sansbold", Helvetica, Arial, sans-serif;
    color: #1b1b1b;
    text-transform: uppercase;
    padding: 0% 18% 3% 3%; }
    @media screen and (max-width: 1140px) {
      .tumbnail .tumbnail-bottom-news p {
        font-size: 13px; } }
    @media screen and (max-width: 980px) {
      .tumbnail .tumbnail-bottom-news p {
        font-size: 12px; } }
    @media screen and (max-width: 768px) {
      .tumbnail .tumbnail-bottom-news p {
        font-size: 9px; } }
    @media screen and (max-width: 620px) {
      .tumbnail .tumbnail-bottom-news p {
        font-size: 11px; } }
  .tumbnail .tumbnail-bottom-news .pp {
    padding: 0% 7% 4% 5%; }
    @media screen and (max-width: 980px) {
      .tumbnail .tumbnail-bottom-news .pp {
        padding: 0% 2% 4% 5%; } }

.container {
  max-width: 1170px;
  margin: 0 auto;
  padding: 0 15px; }
  .container-header {
    max-width: 1005px; }

.heading {
  font: 300 36px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #343434;
  line-height: 1.4; }
  @media screen and (max-width: 980px) {
    .heading {
      font-size: 30px; } }
  @media screen and (max-width: 768px) {
    .heading {
      font-size: 25px; } }
  @media screen and (max-width: 520px) {
    .heading {
      font-size: 20px; } }
  @media screen and (max-width: 480px) {
    .heading {
      font-size: 15px; } }

.header {
  position: absolute;
  width: 100%;
  background: #fff;
  z-index: 10;
  margin-top: 1.7%;
  z-index: 40; }
  @media screen and (max-width: 580px) {
    .header {
      margin-top: 0.7%;
      padding-bottom: 2%; } }
  .header-holder {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -ms-flex-pack: justify;
    justify-content: space-between;
    position: relative; }
    @media screen and (max-width: 768px) {
      .header-holder .header-inner-left {
        -ms-flex-order: 2;
        order: 2; }
      .header-holder .header-inner-center {
        -ms-flex-order: 1;
        order: 1; } }
  .header-inner {
    -ms-flex-align: center;
    align-items: center; }
    @media screen and (max-width: 768px) {
      .header-inner {
        width: 100%; } }
    .header-inner-left {
      width: 42%; }
      @media screen and (max-width: 768px) {
        .header-inner-left {
          width: 100%; } }
    .header-inner-center {
      width: 14.9%;
      margin-bottom: -2.8%; }
      @media screen and (max-width: 1024px) {
        .header-inner-center {
          width: 13.9%;
          margin-bottom: -5.6%; } }
      @media screen and (max-width: 768px) {
        .header-inner-center {
          width: 20%; } }
      .header-inner-center .logo {
        display: block;
        box-shadow: -3px 21px 0px #fff;
        border-radius: 50%;
        margin-top: -8%;
        background: #fff; }
        @media screen and (max-width: 1024px) {
          .header-inner-center .logo {
            box-shadow: none;
            background: transparent; } }
        .header-inner-center .logo-img {
          border-radius: 50%;
          background: #ececec;
          border: 10px solid #fff;
          display: inline-block;
          margin: 0px 1% 0 10%; }
          .header-inner-center .logo-img img {
            width: 100%; }
    .header-inner-right {
      width: 40%; }
      @media screen and (max-width: 768px) {
        .header-inner-right {
          display: none; } }
      .header-inner-right .menu-nav .menu {
        -ms-flex-pack: start;
        justify-content: flex-start;
        margin-top: 7%; }
        @media screen and (max-width: 1024px) {
          .header-inner-right .menu-nav .menu {
            margin-top: 4px;
            ustify-content: space-between; } }
        .header-inner-right .menu-nav .menu li {
          margin-right: 3%; }
          .header-inner-right .menu-nav .menu li a {
            letter-spacing: 0.3px; }

.main {
  padding-top: 3%; }
  @media screen and (max-width: 768px) {
    .main {
      padding-top: 9%; } }
  .main .help {
    background: #FFF url(../images/Lent.png) no-repeat 42% 71.5%;
    background-size: 76.8% 35.1%;
    padding-bottom: 6.5%;
    position: relative; }
    .main .help:after {
      content: "";
      position: absolute;
      width: 15%;
      height: 100%;
      left: 48.9%;
      top: -4%;
      background: url(../images/arrow_down.png) no-repeat;
      background-size: 21% 8%;
      z-index: 1; }
      @media screen and (max-width: 980px) {
        .main .help:after {
          background-size: 29% 8%; } }
      @media screen and (max-width: 600px) {
        .main .help:after {
          display: none; } }
    @media screen and (max-width: 768px) {
      .main .help {
        background: #FFF;
        padding-bottom: 3.5%; } }
    .main .help .heading-inner {
      padding-top: 7.2%;
      padding-bottom: 8.4%;
      padding-left: 1%; }
      @media screen and (max-width: 768px) {
        .main .help .heading-inner {
          padding-top: 1.5%;
          padding-bottom: 1.4%; } }
      .main .help .heading-inner h3 {
        font: 20px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        color: #939393;
        padding: 2.1% 0 1.9% 2%; }
        @media screen and (max-width: 980px) {
          .main .help .heading-inner h3 {
            font-size: 17px; } }
        @media screen and (max-width: 768px) {
          .main .help .heading-inner h3 {
            font-size: 14px; } }
        @media screen and (max-width: 480px) {
          .main .help .heading-inner h3 {
            font-size: 12px; } }
    .main .help .help-form form .text-center {
      padding-left: 1%; }
    .main .help-bottom {
      position: relative;
      background: #f1f1f1 url(../images/Lent.png) no-repeat 42% 71.5%; }
      @media screen and (max-width: 768px) {
        .main .help-bottom {
          background: #f1f1f1; } }
      .main .help-bottom:after {
        content: "";
        position: absolute;
        width: 15%;
        height: 100%;
        left: 48.9%;
        top: -4%;
        background: transparent;
        z-index: -5; }
  .main .question {
    background: #f1f1f1 url(../images/Lent2.png) no-repeat 53% 63.5%;
    padding-bottom: 6.5%;
    position: relative; }
    .main .question:after {
      content: "";
      position: absolute;
      width: 15%;
      height: 100%;
      left: 47.4%;
      top: -5.3%;
      background: url(../images/klever.png) no-repeat;
      background-size: 42% 11.8%;
      z-index: 1; }
      @media screen and (max-width: 1220px) {
        .main .question:after {
          background-size: 37% 9.8%; } }
      @media screen and (max-width: 768px) {
        .main .question:after {
          display: none; } }
    @media screen and (max-width: 768px) {
      .main .question {
        background: #f1f1f1;
        padding-bottom: 3.5%; } }
    .main .question .heading-inner {
      padding-top: 7.1%;
      padding-bottom: 3.5%; }
      @media screen and (max-width: 768px) {
        .main .question .heading-inner {
          padding-top: 1.5%;
          padding-bottom: 1.4%; } }
      .main .question .heading-inner .heading {
        padding-left: 1%; }
    .main .question-block {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      padding: 0 0% 0 9%; }
      @media screen and (max-width: 1024px) {
        .main .question-block {
          -ms-flex-pack: distribute;
          justify-content: space-around;
          padding: 0; } }
    .main .question .help-form {
      padding-top: 6.2%; }
      .main .question .help-form .text-center {
        padding-left: 1%; }
  .main .swiper-jumb {
    background: url(../images/fon_slider3.jpg) no-repeat;
    background-size: cover;
    overflow: hidden; }
  .main .immigration {
    padding-bottom: 7.5%; }
    .main .immigration .container {
      max-width: 1175px;
      margin: 0 auto;
      padding: 0px; }
    .main .immigration .heading-inner {
      padding-top: 7.1%;
      padding-bottom: 5.9%;
      padding-left: 0.9%; }
      @media screen and (max-width: 768px) {
        .main .immigration .heading-inner {
          padding-top: 1.5%;
          padding-bottom: 1.4%; } }
    .main .immigration .block-imigrant {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      -ms-flex-direction: row;
      flex-direction: row;
      -ms-flex-pack: justify;
      justify-content: space-between;
      padding: 0 0.8%; }
      .main .immigration .block-imigrant-left {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -ms-flex-pack: start;
        justify-content: flex-start;
        -ms-flex-direction: row;
        flex-direction: row;
        width: 65%; }
        @media screen and (max-width: 680px) {
          .main .immigration .block-imigrant-left {
            width: 100%;
            padding-bottom: 2%; } }
        .main .immigration .block-imigrant-left-img {
          width: 50%;
          padding-left: 1.7%; }
        .main .immigration .block-imigrant-left-text {
          display: -ms-flexbox;
          display: flex;
          -ms-flex-wrap: wrap;
          flex-wrap: wrap;
          -ms-flex-align: center;
          align-items: center;
          -ms-flex-direction: column;
          flex-direction: column;
          width: 43%;
          padding: 0 3.5%; }
          .main .immigration .block-imigrant-left-text .text-top {
            font: 20px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
            color: #a1a1a1;
            background: url(../images/Lent4.png) no-repeat 0% 100%;
            line-height: 1.5;
            padding-bottom: 11%;
            padding-top: 3.1%; }
            @media screen and (max-width: 980px) {
              .main .immigration .block-imigrant-left-text .text-top {
                font-size: 16px; } }
            @media screen and (max-width: 768px) {
              .main .immigration .block-imigrant-left-text .text-top {
                font-size: 14px; } }
            @media screen and (max-width: 520px) {
              .main .immigration .block-imigrant-left-text .text-top {
                font-size: 12px; } }
          .main .immigration .block-imigrant-left-text .text-bottom {
            font: 700 16px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
            color: #343434;
            text-transform: uppercase;
            padding-top: 5.8%;
            line-height: 1.9; }
            @media screen and (max-width: 980px) {
              .main .immigration .block-imigrant-left-text .text-bottom {
                font-size: 12px; } }
            @media screen and (max-width: 768px) {
              .main .immigration .block-imigrant-left-text .text-bottom {
                font-size: 10px; } }
            @media screen and (max-width: 520px) {
              .main .immigration .block-imigrant-left-text .text-bottom {
                font-size: 8px; } }
      .main .immigration .block-imigrant-right {
        width: 31.4%;
        background: url(../images/dot.png) no-repeat;
        background-size: 100% 100%; }
        @media screen and (max-width: 680px) {
          .main .immigration .block-imigrant-right {
            width: 100%; } }
        .main .immigration .block-imigrant-right .help-form .form-input {
          padding: 0 4%;
          padding-top: 7%;
          padding-bottom: 6%; }
          @media screen and (max-width: 680px) {
            .main .immigration .block-imigrant-right .help-form .form-input {
              padding-top: 2%;
              padding-bottom: 0%; } }
          .main .immigration .block-imigrant-right .help-form .form-input .input-group {
            width: 96%;
            margin-bottom: 3.1%; }
            @media screen and (max-width: 680px) {
              .main .immigration .block-imigrant-right .help-form .form-input .input-group {
                margin-bottom: 0; }
                .main .immigration .block-imigrant-right .help-form .form-input .input-group:after {
                  left: 9%;
                  top: 48%; } }
            @media screen and (max-width: 400px) {
              .main .immigration .block-imigrant-right .help-form .form-input .input-group:after {
                left: 12%;
                top: 47%; } }
            .main .immigration .block-imigrant-right .help-form .form-input .input-group .form-control {
              margin-left: 0;
              margin-bottom: 1%; }
        .main .immigration .block-imigrant-right .help-form .text-center .btn {
          padding: 12px 33px;
          font-size: 18px;
          border-radius: 6px;
          font-family: "open_sansbold", Helvetica, Arial, sans-serif;
          font-weight: 700; }
          @media screen and (max-width: 1130px) {
            .main .immigration .block-imigrant-right .help-form .text-center .btn {
              font-size: 15px; } }
          @media screen and (max-width: 980px) {
            .main .immigration .block-imigrant-right .help-form .text-center .btn {
              font-size: 12px; } }
          @media screen and (max-width: 840px) {
            .main .immigration .block-imigrant-right .help-form .text-center .btn {
              font-size: 10px;
              padding: 12px 20px; } }
          @media screen and (max-width: 768px) {
            .main .immigration .block-imigrant-right .help-form .text-center .btn {
              padding: 12px 10px; } }
  .main .not-immigration {
    padding-bottom: 6.8%; }
    .main .not-immigration .heading-inner {
      padding-top: 7.2%;
      padding-bottom: 4%; }
      @media screen and (max-width: 768px) {
        .main .not-immigration .heading-inner {
          padding-top: 1.5%;
          padding-bottom: 1.4%; } }
    .main .not-immigration .list {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      -ms-flex-pack: justify;
      justify-content: space-between;
      margin: 0 0.5%; }
      .main .not-immigration .list .inner {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -ms-flex-pack: justify;
        justify-content: space-between;
        -ms-flex-align: start;
        align-items: flex-start;
        margin-bottom: 2.8%; }
        .main .not-immigration .list .inner .list-img {
          width: 12%;
          background: #f1f1f1;
          border-radius: 13px; }
          @media screen and (max-width: 768px) {
            .main .not-immigration .list .inner .list-img {
              width: 10%; } }
          @media screen and (max-width: 480px) {
            .main .not-immigration .list .inner .list-img {
              width: 15%; } }
          .main .not-immigration .list .inner .list-img .img-holder {
            padding: 34% 33% 33% 37%; }
        .main .not-immigration .list .inner .list-text {
          width: 82%; }
          @media screen and (max-width: 768px) {
            .main .not-immigration .list .inner .list-text {
              width: 87%; } }
          @media screen and (max-width: 480px) {
            .main .not-immigration .list .inner .list-text {
              width: 80%; } }
          .main .not-immigration .list .inner .list-text p {
            font: 18px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
            color: #111;
            line-height: 1.4; }
            @media screen and (max-width: 1160px) {
              .main .not-immigration .list .inner .list-text p {
                font-size: 16px; } }
            @media screen and (max-width: 960px) {
              .main .not-immigration .list .inner .list-text p {
                font-size: 14px; } }
            @media screen and (max-width: 768px) {
              .main .not-immigration .list .inner .list-text p {
                font-size: 16px; } }
      .main .not-immigration .list .dot {
        background: url(../images/dot3.png) no-repeat 93% 100%;
        background-size: 80% 2%;
        padding-bottom: 1%; }
        @media screen and (max-width: 768px) {
          .main .not-immigration .list .dot {
            background: transparent; } }
      .main .not-immigration .list-left {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        width: 50%; }
        @media screen and (max-width: 768px) {
          .main .not-immigration .list-left {
            width: 100%; } }
      .main .not-immigration .list-right {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        width: 48%; }
        @media screen and (max-width: 768px) {
          .main .not-immigration .list-right {
            width: 100%; } }
    .main .not-immigration .bottom-heading {
      padding-top: 2.1%;
      padding-bottom: 1.2%;
      padding-left: 3%; }
      @media screen and (max-width: 1160px) {
        .main .not-immigration .bottom-heading {
          padding-left: 0%;
          text-align: center; } }
      .main .not-immigration .bottom-heading h3 {
        font: 700 20px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; }
        @media screen and (max-width: 1160px) {
          .main .not-immigration .bottom-heading h3 {
            font-size: 16px; } }
        @media screen and (max-width: 960px) {
          .main .not-immigration .bottom-heading h3 {
            font-size: 14px; } }
        @media screen and (max-width: 520px) {
          .main .not-immigration .bottom-heading h3 {
            font-size: 12px; } }
    .main .not-immigration .text-center {
      padding-left: 1%; }
  .main .services {
    background: url(../images/bg.png) repeat;
    position: relative; }
    .main .services:after {
      content: "";
      position: absolute;
      width: 15%;
      height: 100%;
      left: 47.4%;
      top: -6.1%;
      background: url(../images/klever.png) no-repeat;
      background-size: 42% 11.8%;
      z-index: 1; }
      @media screen and (max-width: 1220px) {
        .main .services:after {
          background-size: 37% 9.8%; } }
      @media screen and (max-width: 728px) {
        .main .services:after {
          background-size: 43% 3.8%;
          left: 47.4%;
          top: -2.1%; } }
      @media screen and (max-width: 600px) {
        .main .services:after {
          display: none; } }
    .main .services .heading-inner {
      padding-top: 7.1%;
      padding-bottom: 4.7%; }
      @media screen and (max-width: 768px) {
        .main .services .heading-inner {
          padding-top: 1.5%;
          padding-bottom: 1.4%; } }
      .main .services .heading-inner .heading {
        color: #fff;
        padding-left: 1%; }
    .main .services .services-block {
      display: -ms-flexbox;
      display: flex;
      display: flex;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      max-width: 1200px;
      margin: 0 auto;
      padding: 0px 24px 0 24px;
      -ms-flex-pack: center;
      justify-content: center;
      background: url(../images/Lent3.png) no-repeat 51% 70.5%;
      padding-bottom: 4.3%;
      background-size: 92% 45.1%; }
      @media screen and (max-width: 840px) {
        .main .services .services-block {
          background: transparent; } }
      @media screen and (max-width: 728px) {
        .main .services .services-block {
          padding: 0px; } }
  .main .swiper-one {
    background: #f1f1f1;
    position: relative; }
    .main .swiper-one:after {
      content: "";
      position: absolute;
      width: 15%;
      height: 100%;
      left: 47.4%;
      top: -6.1%;
      background: url(../images/klever.png) no-repeat;
      background-size: 42% 12.8%;
      z-index: 1; }
      @media screen and (max-width: 1220px) {
        .main .swiper-one:after {
          background-size: 37% 9.8%; } }
      @media screen and (max-width: 728px) {
        .main .swiper-one:after {
          background-size: 43% 3.8%;
          left: 47.4%;
          top: -2.1%; } }
      @media screen and (max-width: 600px) {
        .main .swiper-one:after {
          display: none; } }
    .main .swiper-one .container {
      padding: 0 21px; }
    .main .swiper-one .heading-inner {
      padding-top: 7.2%;
      padding-bottom: 5.9%;
      padding-left: 2%; }
      @media screen and (max-width: 768px) {
        .main .swiper-one .heading-inner {
          padding-top: 1.5%;
          padding-bottom: 1.4%; } }
      .main .swiper-one .heading-inner .heading {
        word-spacing: 0; }
    .main .swiper-one .link {
      padding: 2% 0 7.2% 3%; }
      .main .swiper-one .link a {
        display: inline-block;
        width: 265px;
        background: url(../images/search.png) no-repeat 0% 0%;
        background-size: 8% 100%;
        color: #e21b28;
        text-decoration: underline;
        text-transform: uppercase;
        font: 700 14px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; }
        .main .swiper-one .link a:hover {
          color: #1b1b1b; }
        @media screen and (max-width: 520px) {
          .main .swiper-one .link a {
            width: 200px;
            font-size: 10px; } }
  .main .swiper-two .container {
    padding: 0px 0px 0 22px; }
    @media screen and (max-width: 1300px) {
      .main .swiper-two .container {
        padding: 0px 0px 0 0px; } }
  .main .swiper-two .heading-inner {
    padding-top: 7.2%;
    padding-bottom: 5.7%;
    padding-left: 6%;
    padding-right: 7%; }
    @media screen and (max-width: 768px) {
      .main .swiper-two .heading-inner {
        padding-top: 1.5%;
        padding-bottom: 1.4%; } }
    .main .swiper-two .heading-inner .heading {
      word-spacing: 0; }
  .main .swiper-two .link {
    padding: 2% 0 7.2% 3.4%; }
    .main .swiper-two .link a {
      display: inline-block;
      width: 265px;
      background: url(../images/search.png) no-repeat 3% 0%;
      background-size: 8% 100%;
      color: #e21b28;
      text-decoration: underline;
      text-transform: uppercase;
      font: 700 14px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; }
      .main .swiper-two .link a:hover {
        color: #1b1b1b; }
      @media screen and (max-width: 520px) {
        .main .swiper-two .link a {
          width: 200px;
          font-size: 10px; } }

.footer {
  background: url(../images/footer.png) no-repeat;
  background-size: cover; }
  .footer .container {
    padding: 0px 3px 0 17px; }
  .footer-top {
    background: url(../images/dot2.png) repeat-x 0% 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -ms-flex-pack: justify;
    justify-content: space-between;
    padding-top: 3.2%; }
    .footer-top-left {
      width: 80%; }
      @media screen and (max-width: 1115px) {
        .footer-top-left {
          width: 90%; } }
      @media screen and (max-width: 850px) {
        .footer-top-left {
          width: 83%; } }
      @media screen and (max-width: 850px) {
        .footer-top-left {
          width: 79%; } }
      @media screen and (max-width: 520px) {
        .footer-top-left {
          width: 100%; } }
    .footer-top-right {
      width: 17%; }
      @media screen and (max-width: 1115px) {
        .footer-top-right {
          width: 10%; } }
      @media screen and (max-width: 850px) {
        .footer-top-right {
          width: 15%; } }
      @media screen and (max-width: 768px) {
        .footer-top-right {
          width: 18%; } }
      @media screen and (max-width: 520px) {
        .footer-top-right {
          width: 100%; } }
  .footer-bottom {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -ms-flex-pack: justify;
    justify-content: space-between; }
    .footer-bottom-left {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      -ms-flex-pack: start;
      justify-content: flex-start;
      width: 70%; }
      @media screen and (max-width: 768px) {
        .footer-bottom-left {
          width: 100%;
          -ms-flex-pack: distribute;
          justify-content: space-around; } }
      .footer-bottom-left .logo {
        width: 12%; }
        @media screen and (max-width: 980px) {
          .footer-bottom-left .logo {
            width: 16%; } }
        .footer-bottom-left .logo .img-holder {
          padding: 23% 0% 7% 5%; }
        @media screen and (max-width: 520px) {
          .footer-bottom-left .logo {
            display: none; } }
      .footer-bottom-left .tel {
        width: 34.5%;
        background: url(../images/phone3.png) no-repeat 2% 56%;
        background-size: 8% 21%; }
        @media screen and (max-width: 680px) {
          .footer-bottom-left .tel {
            background: url(../images/phone3.png) no-repeat 5% 57%;
            background-size: 7% 18%; } }
        @media screen and (max-width: 520px) {
          .footer-bottom-left .tel {
            background: url(../images/phone3.png) no-repeat 11% 63%;
            background-size: 6% 28%; } }
        @media screen and (max-width: 420px) {
          .footer-bottom-left .tel {
            background: url(../images/phone3.png) no-repeat 3% 65%;
            background-size: 4% 45%;
            width: 100%; } }
        .footer-bottom-left .tel p {
          font: 22px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
          color: #cacaca;
          margin-left: 25px;
          padding: 14% 3% 6% 3%; }
          @media screen and (max-width: 1080px) {
            .footer-bottom-left .tel p {
              padding: 18% 3% 6% 3%; } }
          @media screen and (max-width: 980px) {
            .footer-bottom-left .tel p {
              padding: 20% 3% 6% 3%;
              font-size: 16px; } }
          @media screen and (max-width: 820px) {
            .footer-bottom-left .tel p {
              padding: 23% 3% 6% 3%; } }
          @media screen and (max-width: 768px) {
            .footer-bottom-left .tel p {
              padding: 17% 3% 6% 3%; } }
          @media screen and (max-width: 680px) {
            .footer-bottom-left .tel p {
              padding: 22% 3% 6% 3%;
              font-size: 12px; } }
          @media screen and (max-width: 580px) {
            .footer-bottom-left .tel p {
              padding: 25% 3% 6% 3%; } }
          @media screen and (max-width: 520px) {
            .footer-bottom-left .tel p {
              padding: 11% 3% 6% 3%;
              font-size: 11px; } }
          @media screen and (max-width: 420px) {
            .footer-bottom-left .tel p {
              padding: 3% 3% 1% 3%;
              font-size: 14px; } }
        .footer-bottom-left .tel-mob {
          background: url(../images/phone2.png) no-repeat 0% 57%;
          background-size: 6% 25%; }
          @media screen and (max-width: 980px) {
            .footer-bottom-left .tel-mob {
              background: url(../images/phone2.png) no-repeat 3% 57%;
              background-size: 7% 25%; } }
          @media screen and (max-width: 680px) {
            .footer-bottom-left .tel-mob {
              background: url(../images/phone2.png) no-repeat 5% 57%;
              background-size: 6% 21%; } }
          @media screen and (max-width: 520px) {
            .footer-bottom-left .tel-mob {
              background: url(../images/phone2.png) no-repeat 9% 49%;
              background-size: 6% 31%; } }
          @media screen and (max-width: 420px) {
            .footer-bottom-left .tel-mob {
              background: url(../images/phone2.png) no-repeat 3% 21%;
              background-size: 4% 68%; } }
          .footer-bottom-left .tel-mob p {
            padding: 14% 5% 6% 1%; }
            @media screen and (max-width: 1080px) {
              .footer-bottom-left .tel-mob p {
                padding: 17% 3% 6% 3%; } }
            @media screen and (max-width: 980px) {
              .footer-bottom-left .tel-mob p {
                padding: 19% 3% 6% 3%; } }
            @media screen and (max-width: 820px) {
              .footer-bottom-left .tel-mob p {
                padding: 22% 3% 6% 3%; } }
            @media screen and (max-width: 768px) {
              .footer-bottom-left .tel-mob p {
                padding: 17% 3% 6% 3%; } }
            @media screen and (max-width: 680px) {
              .footer-bottom-left .tel-mob p {
                padding: 22% 3% 6% 3%;
                font-size: 12px; } }
            @media screen and (max-width: 580px) {
              .footer-bottom-left .tel-mob p {
                padding: 25% 3% 6% 3%; } }
            @media screen and (max-width: 520px) {
              .footer-bottom-left .tel-mob p {
                padding: 10% 3% 6% 3%;
                font-size: 11px; } }
            @media screen and (max-width: 420px) {
              .footer-bottom-left .tel-mob p {
                padding: 1% 3% 1% 3%;
                font-size: 14px; } }
    .footer-bottom-right {
      width: 29%; }
      @media screen and (max-width: 768px) {
        .footer-bottom-right {
          width: 100%; } }
      .footer-bottom-right p {
        text-align: right;
        padding: 13.8% 2% 3% 12%;
        font-size: 14px; }
        @media screen and (max-width: 980px) {
          .footer-bottom-right p {
            font-size: 13px; } }
        @media screen and (max-width: 768px) {
          .footer-bottom-right p {
            text-align: center;
            padding: 2% 1% 3% 1%;
            font-size: 15px; } }
        @media screen and (max-width: 420px) {
          .footer-bottom-right p {
            font-size: 12px; } }

.form-input {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  position: relative; }
  @media screen and (max-width: 768px) {
    .form-input {
      -ms-flex-pack: distribute;
      justify-content: space-around; } }
  .form-input .input-group {
    position: relative;
    text-align: center;
    width: 31.6%;
    margin-bottom: 2.1%; }
    @media screen and (max-width: 768px) {
      .form-input .input-group {
        width: 45%; } }
    @media screen and (max-width: 520px) {
      .form-input .input-group {
        width: 100%;
        margin-bottom: 10px; } }
    .form-input .input-group:after {
      content: "";
      position: absolute;
      width: 1px;
      height: 25px;
      left: 13%;
      top: 51%;
      background: #939393; }
      @media screen and (max-width: 680px) {
        .form-input .input-group:after {
          left: 15%; } }
      @media screen and (max-width: 480px) {
        .form-input .input-group:after {
          left: 10%; } }
      @media screen and (max-width: 414px) {
        .form-input .input-group:after {
          left: 11%; } }
      @media screen and (max-width: 375px) {
        .form-input .input-group:after {
          left: 12%; } }
  .form-input .desc {
    color: #9a9a9a;
    font: 14px "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; }
  .form-input .form-control {
    width: 100%;
    padding: 8px 25px 8px 15%;
    font-size: 16px;
    color: #c1c1c1;
    font-family: inherit;
    font-weight: 300;
    border: 1px solid #939393;
    border-radius: 10px;
    margin-top: 1%;
    margin-left: 1.9%; }
    @media screen and (max-width: 768px) {
      .form-input .form-control {
        padding: 5px 25px 5px 39px; } }
    .form-input .form-control-name {
      background: #fff url(../images/user.png) no-repeat 3% 50%; }
    .form-input .form-control-mail {
      background: #fff url(../images/mail.png) no-repeat 2% 50%; }
    .form-input .form-control-phone {
      background: #fff url(../images/phone.png) no-repeat 4% 50%; }

.block-imigrant-right .form-input {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  align-items: center;
  position: relative; }
  .block-imigrant-right .form-input .input-group {
    width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
